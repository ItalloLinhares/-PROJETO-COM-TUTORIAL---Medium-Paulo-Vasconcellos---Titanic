# -*- coding: utf-8 -*-
"""20190509 [PROJETO COM TUTORIAL] - Medium Paulo Vasconcellos - Titanic

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AY2gVqZ-MytBLSVZdpzpIdpQ5ODzSWbN

#**Projeto Titanic**
## Perguntas a serem respondidas:
Dentre alguns dos questionamentos que podem ser gerados com estes dados, gostaria de saber a resposta para as seguindas perguntas:

*   Quantas pessoas sobreviveram ao desastre, segundo este dataset? Quantas não sobreviveram?
*  A classe em que o passageiro encontrava-se foi um fator decisivo para a sobrevivência?
* Qual foi a proporção de homens e mulheres que sobreviveram a tragédia?
* Será que o número de sobreviventes meninas foi muito maior que os sobreviventes meninos?
* Quem são os passageiros que não tiveram sua tarifa cobrada? Eles sobreviveram?
"""

# importando bibliotecas
# %matplotlib inline
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import random

#leitura do arquivo csv contendo as informaçõe dos tripulantes
titanic = pd.read_csv('20190509 titanic_data.csv')
print('Este dataset pssui %s linhas e %s colunas' % (titanic.shape[0], titanic.shape[1]))
titanic.head()

#removendo colunas que não serão utilizadas
titanic.drop(['Ticket', 'Cabin', 'PassengerId'], axis=1, inplace = True)
titanic.head()

#Mudando o nome das colunas para portugês
titanic.columns = ['Sobreviveu?','Classe','Nome','Sexo','Idade','Irmãos/Cônjugue','Pais/Crianças','Tarifa','Embarque']
titanic.head()

"""##Dicionário de Dados:

* Sobreviveu?: Informa se o passageiro sobreviveu ao desastre. 0 = Não; 1 = Sim
* Classe: Classe na qual o passageiro viajou. 1 = Primeira Classe; 2 = Segunda Classe; 3 = Terceira Classe
* Nome: Nome do passageiro
* Sexo: Sexo do passageiro
* Idade: Idade do passageiro
* Irmãos/Cônjuge: Informa a quantidade de irmãos e cônjuges que o paciente possuía na embarcação
* Pais/Crianças: Quantidade de crianças e idosos (pais) relativos ao passageiro
* Tarifa: Valor da passagem
* Embarque: Local onde o passageiro embarcou

Algumas considerações importantes sobre esses dados: a classe do passageiro era caracterizada pelo local em que sua cabine ficava na embarcação. A Primeira Classe ficava na parte superior doTitanic, enquanto a Segunda ficava ao meio e a Terceira, considerada a menor das classes, ficava ao fundo da embarcação.
"""

# Mudando os nomes dos valores das colunas 'Embarque', 'Sobreviveu?' e 'Sexo' para facilitar a análise
titanic['Embarque'] = titanic['Embarque'].replace(['S', 'Q', 'C'], ['Southampton', 'Queenstown', 'Cherbourg'])
titanic['Sobreviveu?'] = titanic['Sobreviveu?'].replace([0,1], ['Não', 'Sim'])
titanic['Sexo'] = titanic['Sexo'].replace(['male', 'female'], ['Masculino', 'Feminino'])
titanic.head()

# Dando uma olhada rápida nas quartis e mediana
titanic.describe()

#Substituindo os NaN da coluna idade por 0 para evitar problemas futuros (primeiro NaN a aparecer está ni ID 5)
titanic['Idade'].fillna(0, inplace = True)
#Perceba que o último valor (ID = 5) está com a idade igual a 0 pois era um Nan antes da operação 
titanic.head(6)

# Os quartis e as medianas da coluna idade são diferentes da tabela anterior
titanic.describe()

#quantidades de sobreviventes e mortos na tragédia
passageiros = sns.countplot(data = titanic, x='Sobreviveu?', hue='Sexo', palette='Reds_d')

#posicionando valores acima das barras
for p in passageiros.patches:
  b=p.get_bbox()
  passageiros.annotate("{:.0f}".format(b.y1 + b.y0), ((b.x0 + b.x1)/2 - 0.03, b.y1 + 5))
plt.title('QUANTIDADE DE SOBREVIVENTES/MOTROS\n Total: %s passageiros' % (titanic.shape[0]))
plt.xlabel('Sobreviveu?')
plt.ylabel('Números de sobreviventes')
plt.show()

#Celulula com as coordenadas Bbox só para eu conseguir olhar tud certinho (meramente ilustrativo e eu só usei para enteder a lógica)
for p in passageiros.patches:
  b=p.get_bbox()
  print(b)

#Plotando um gráfico violino que eu não tenho a minima ideia de como ler

#titanic.groupby('Sexo')['Sobreviveu?'].value_counts()

sobreviventes_sexo = titanic.copy()
sobreviventes_sexo['Sobreviveu?'] = titanic['Sobreviveu?'] == 'Sim'

sns.violinplot(data=sobreviventes_sexo, y='Sobreviveu?', x='Sexo', size=15)

plt.title('PROPORÇÃO DE SOBREVIVENTES POR SEXO')
plt.show

#Criando um DataFrame que contenha apenas mulheres e crianças 
prioritarios = (titanic['Idade'] <= 15) & (titanic['Idade'] > 0) | (titanic['Sexo'] == 'Feminino')
prioritarios = titanic[prioritarios]
prioritarios.head()

#agrupando os dados de mulheres e crianças que sobreviveram a tragédia. Um gráfico é gerado a partir desses dados
prioritarios.groupby('Sexo')['Sobreviveu?'].apply(lambda x: np.mean(x == 'Sim')).plot(kind='bar', alpha=.7, figsize=(11,5), rot=0, grid=True)

plt.title('PROPORÇÃO DE MENINOS E MULHERES SOBREVIVENTES\n Total: %s passageiros' % (prioritarios.shape[0]))
plt.ylabel('Proporção')
plt.show()

#proporção de sobreviventes meninos e meninas no TItanic
criancas = prioritarios[prioritarios['Idade'] <=15]
prioritarios[prioritarios['Idade'] <=15].groupby('Sexo')['Sobreviveu?'].apply(lambda x: np.mean(x == 'Sim')).plot(kind='bar', alpha=.7, figsize=(11,5), rot=0, grid=True)

plt.title('PROPORÇÃO DE MENINOS E MENINAS SOBREVIVENTES\n Total: %s passageiros' % (criancas.shape[0]))
plt.ylabel('Proporção')
plt.show()

#Informações do gráfico "PROPORÇÃO DE MENINOS E MENINAS SOBREVIVENTES" 
prioritarios[prioritarios['Idade'] <=15].groupby('Sexo')['Sobreviveu?'].apply(lambda x: np.mean(x == 'Sim'))

#agrupando a proporção de sobreviventes por classe e gerando um gráfico a partir do resultado
sobreviventes_classe = titanic.copy()
sobreviventes_classe['Sobreviveu?'] = titanic['Sobreviveu?'] == 'Sim'

sns.barplot(data=sobreviventes_classe, y='Sobreviveu?', x='Classe')

plt.title('PROPORÇÃO DE SOBREVIVENTES POR CLASSE')
plt.ylabel('Proporção')
plt.show()

#filtrando o dataset para conter dados apenas de pessoas que sobreviveram
classe_sobreviventes = titanic[titanic['Sobreviveu?'] == 'Sim']['Classe'].value_counts().sort_values(ascending=True)
classe_sobreviventes.plot(kind ='barh', figsize=(11,5), rot=0,  grid=True )

plt.title('QUANTIDADE DE SOBREVIVENTES POR CLASSE\n Total: %s sobreviventes' % (classe_sobreviventes.sum()))
plt.xlabel('QUANTIDADE DE SOBREVIVENTES')
plt.ylabel('Classe')
plt.show()

#quantidade de passageiros (sobreviventes ou não) por classe
titanic['Classe'].value_counts()

#agrupando passageiros por faixa etária
idades = titanic[titanic['Idade'] > 0.0]['Idade'].astype(int).hist(bins=10, figsize=(11,5), color='red', alpha= .7)

plt.title('FAIXAS ETÁRIAS NO TITANIC\n Total: %s passageiros' % (titanic.shape[0]))
plt.xlabel('FAIXA DE IDADE')
plt.ylabel('FREQUÊNCIA')
plt.show()

#passageiros que não tiveram sua passagem cobrada ou informada
passagem_gratuita = titanic[titanic['Tarifa'] == 0].reset_index(drop = True)
passagem_gratuita

"""#*CONCLUSÃO - ITALLO*

##**Quantas pessoas sobreviveram ao desastre, segundo este dataset? Quantas não sobreviveram?**

De acordo com o dataset, 342 pessoas sobreviveram e 549 não
"""

sobreviventes = sns.countplot(data = titanic, x ='Sobreviveu?')
#posicionando valores acima das barras
for p in sobreviventes.patches:
  b=p.get_bbox()
  sobreviventes.annotate("{:.0f}".format(b.y1 + b.y0), ((b.x0 + b.x1)/2 - 0.03, b.y1 + 5))

"""## **A classe em que o passageiro encontrava-se foi um fator decisivo para a sobrevivência?**

A sobrevivência de passageiros por classe se dá pela posição em que as cabinas de cada classe se encontravam. As classes com cabines mais próximas aos botes tiveram mais sobreviventes

Nota: A classe três tem mais sobreviventes que a 2 por ter muito mais pessoas
"""

classe_sobreviventes = titanic[titanic['Sobreviveu?'] == 'Sim']['Classe'].value_counts().sort_values(ascending=True)
classe_sobreviventes.plot(kind ='barh', figsize=(11,5), rot=0,  grid=True )

classe_sobreviventes

titanic['Classe'].value_counts()

"""##*Qual foi a quantidade de homens e mulheres que sobreviveram a tragédia?*

Sobreviveram 109 pessoas do sexo masculino e 233 do sexo feminino
"""

#quantidades de sobreviventes e mortos na tragédia
passageiros = sns.countplot(data = titanic, x='Sobreviveu?', hue='Sexo', palette='Reds_d')

#posicionando valores acima das barras
for p in passageiros.patches:
  b=p.get_bbox()
  passageiros.annotate("{:.0f}".format(b.y1 + b.y0), ((b.x0 + b.x1)/2 - 0.03, b.y1 + 5))
plt.title('QUANTIDADE DE SOBREVIVENTES/MOTROS\n Total: %s passageiros' % (titanic.shape[0]))
plt.xlabel('Sobreviveu?')
plt.ylabel('Números de sobreviventes')
plt.show()

"""##*Será que o número de sobreviventes meninas foi muito maior que os sobreviventes meninos?*

Quase 70% das meninas sobreviveram, já os meninos 52%
"""

#proporção de sobreviventes meninos e meninas no TItanic
criancas = prioritarios[prioritarios['Idade'] <=15]
prioritarios[prioritarios['Idade'] <=15].groupby('Sexo')['Sobreviveu?'].apply(lambda x: np.mean(x == 'Sim')).plot(kind='bar', alpha=.7, figsize=(11,5), rot=0, grid=True)

plt.title('PROPORÇÃO DE MENINOS E MENINAS SOBREVIVENTES\n Total: %s passageiros' % (criancas.shape[0]))
plt.ylabel('Proporção')
plt.show()

"""##*Quem são os passageiros que não tiveram sua tarifa cobrada? Eles sobreviveram?*

Em geral, são funcionários. Apenas um deles sobreviveu
"""

#passageiros que não tiveram sua passagem cobrada ou informada
passagem_gratuita = titanic[titanic['Tarifa'] == 0].reset_index(drop = True)
passagem_gratuita

